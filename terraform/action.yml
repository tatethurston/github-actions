name: "Terraform Infrastructure Change Management"
on:
  pull_request:
    types: [opened, synchronize, closed]
    paths:
      - .github/workflows/terraform.yml
      - terraform/**
inputs:
  directory:
    description: "The directory with Terraform to manage"
    required: true
  aws-region:
    description: "The AWS region"
    required: true
  role-to-assume:
    description: "The AWS role to assume"
    required: true
  role-session-name:
    description: "The role session name"
    required: true
permissions:
  pull-requests: write
  id-token: write
  contents: read
jobs:
  terraform-plan:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.directory }}
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Init
        uses: tatethurston/github-actions/aws-terraform@main
        with:
          terraform_dir: ${{ inputs.directory }}
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: ${{ inputs.role-session-name }}

      # Lint, Fmt and Validate
      - uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest
      - name: tflint init
        run: tflint --init
      - name: tflint
        run: tflint --format compact --recursive
      - name: terraform fmt
        run: terraform fmt -check -recursive
      - name: terraform validate
        run: terraform validate -no-color

      # Plan
      - name: terraform plan
        id: plan
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan
        env:
          TF_LOG: INFO
          TF_VAR_github_token: ${{ secrets.GH_TOKEN }}

      # Display Plan
      - uses: actions/github-script@v7
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          script: |
            const body = `\
            #### Terraform Plan ðŸ“–

            <details><summary>Show Plan</summary><br>

            \`\`\`
            ${process.env.PLAN}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      # Upload Plan
      - name: "Upload tfplan to AWS S3"
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          aws s3 cp tfplan "s3://tatethurston-terraform-state/plans/tfplan-PR-$PR_NUMBER"

  terraform-apply:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.directory }}

    steps:
      - uses: actions/checkout@v4

      - name: Terraform Init
        uses: tatethurston/github-actions/aws-terraform@main
        with:
          terraform_dir: ${{ inputs.directory }}
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: ${{ inputs.role-session-name }}

      # Download Plan
      - name: "Download tfplan from AWS S3"
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          aws s3 cp "s3://tatethurston-terraform-state/plans/tfplan-PR-$PR_NUMBER" tfplan

      - name: terraform apply
        env:
          TF_LOG: INFO
          TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
        run: terraform apply -auto-approve -input=false tfplan
